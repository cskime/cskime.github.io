<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Constraints on cskime.io</title>
    <link>https://cskime.github.io/tags/constraints/</link>
    <description>Recent content in Constraints on cskime.io</description>
    <generator>Hugo -- 0.129.0</generator>
    <language>en</language>
    <lastBuildDate>Fri, 16 Aug 2024 21:10:26 +0900</lastBuildDate>
    <atom:link href="https://cskime.github.io/tags/constraints/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[Flutter] Bottom fixed footer를 갖는 scrollable widget 만들기</title>
      <link>https://cskime.github.io/posts/fixed-footer-scrollview/</link>
      <pubDate>Fri, 16 Aug 2024 21:10:26 +0900</pubDate>
      <guid>https://cskime.github.io/posts/fixed-footer-scrollview/</guid>
      <description>이 글에서는 vertical direction scroll을 가정한다.
Overview Scrollable widget은 전체 content 높이가 화면 높이보다 작다면 scroll이 활성화되지 않고 content들이 상단 정렬된다. 아래는 SingleChildScrollView에 Column을 사용해서 content widget과 footer widget을 배치하는 예시이다.
Code Demo Footer widget을 화면 하단에 배치하기 위해 content와 footer widget 사이에 Spacer, Expanded와 같은 flexible widget을 사용하면 unbounded height error가 발생한다. Scrollable widget은 child widget에게 unbounded height constraint를 제안하는데, Spacer나 Expanded도 unbounded size를 갖기 때문이다.
Fixed Footer 구현 위 error를 해결하려면 아래와 같은 조건이 필요하다.</description>
    </item>
    <item>
      <title>[Flutter] Flutter Constraint 이해하기</title>
      <link>https://cskime.github.io/posts/flutter-constraints/</link>
      <pubDate>Tue, 25 Jun 2024 16:09:00 +0900</pubDate>
      <guid>https://cskime.github.io/posts/flutter-constraints/</guid>
      <description>Flutter Constraint와 Layout Flutter는 3단계를 거쳐 widget의 layout을 결정한다.
Constraints go down : Parent widget이 child widget에 constraint를 제안한다. Sizes go up : Child widget은 constraint 범위 내의 size를 parent widget에 알려준다. Parent sets position : Parent widget은 자신의 alignment 정보와 child widget size를 사용해서 child widget의 position을 결정한다. 여기서 &amp;ldquo;constraint&amp;ldquo;란 size의 최대 ~ 최소값의 범위를 말한다. Flutter에서는 BoxConstraints class를 주로 사용하여 minWidth, minHeight, maxWidth, maxHeight을 정의한다.
const BoxConstraints({ this.minWidth = 0.</description>
    </item>
  </channel>
</rss>
