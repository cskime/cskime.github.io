<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>ShaderMask on cskime.io</title>
    <link>https://cskime.github.io/tags/shadermask/</link>
    <description>Recent content in ShaderMask on cskime.io</description>
    <generator>Hugo -- 0.129.0</generator>
    <language>en</language>
    <lastBuildDate>Mon, 09 Sep 2024 16:09:13 +0900</lastBuildDate>
    <atom:link href="https://cskime.github.io/tags/shadermask/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Flutter Gradient 적용하는 두 가지 방법</title>
      <link>https://cskime.github.io/posts/flutter-gradient/</link>
      <pubDate>Mon, 09 Sep 2024 16:09:13 +0900</pubDate>
      <guid>https://cskime.github.io/posts/flutter-gradient/</guid>
      <description>Flutter는 두 가지 방법으로 gradient를 적용할 수 있다.
BoxDecoration 사용 ShaderMask 사용 BoxDecoration BoxDecoration의 gradient 속성에 gradient를 적용한다. Box widget을 gradient로 채울 때 사용한다. Example Container( width: 100, height: 100, decoration: const BoxDecoration( gradient: LinearGradient( colors: [Colors.red, Colors.blue], ), ), ), ShaderMask ShaderMask를 사용해서 특정 widget에 shader를 입힐 수 있다.
ShaderMask의 shaderCallback에서 shader 객체를 반환하면 child에 전달한 widget에서 white color인 element에 shader를 입힐 수 있다.
shaderCallback 함수는 LinearGradient 등 gradient 객체의 createShader(rect) method를 사용해서 shader를 반환할 수 있다.</description>
    </item>
  </channel>
</rss>
